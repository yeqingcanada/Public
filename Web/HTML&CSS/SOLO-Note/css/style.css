/* =========================================
                Html, Body
============================================ */

html,
body {
  height: 100%;
}

body {
  color: #212226;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-family: "Raleway", sans-serif;
}

p {
  font-family: "Open Sans", sans-serif;
  font-size: 13px;
  font-weight: 400;
  line-height: 24px;
}

section {
  background: #fff;
  overflow: hidden;
}

/* =========================================
                Preloader
============================================ */

#preloader {
  background-color: #fff;
  position: fixed;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  /* 拥有更高堆叠顺序的元素总是会处于堆叠顺序较低的元素的前面 */
  z-index: 9999;
}

#status {
  background-image: url("../img/preloader/preloader.gif");
  background-repeat: no-repeat;

  /* 
    最终元素的总宽度计算公式是这样的：
    总元素的宽度=宽度+左填充(padding)+右填充+左边框(border)+右边框+左边距(margin)+右边距
    元素的总高度最终计算公式是这样的：
    总元素的高度=高度+顶部填充+底部填充+上边框+下边框+上边距+下边距 
    Margin(外边距) - 清除边框外的区域，外边距是透明的。
    Border(边框) - 围绕在内边距和内容外的边框。
    Padding(内边距) - 清除内容周围的区域，内边距是透明的。
    Content(内容) - 盒子的内容，显示文本和图像。
    width and height is for the content 
  */
  width: 70px;
  height: 70px;

  /* 
    static无特殊定位，top，right等属性不会被应用
    relative遵循文件流，根据原本位置以及bottom，left等属性，进行位置偏移。
    absolute脱离文件流使用top等绝对定位。相对于 static 定位以外的第一个父元素进行定位
    fixed以窗口为参考定位，当出现滚动条，对象不会滚动，会一直保持在窗口中
  */
  position: absolute;
  left: 50%;
  top: 50%;

  /*
    margin-top: 10px;        绝对长度
    margin-top: 1em;         相对于字体大小
    margin-top: 5%;          相对于最相邻的父级元素块（block）的宽度
    margin-top: -35px         将图片向上移动35px，目的是使图片处于正中（中和掉图片本身70px的宽度）
  */
  margin-top: -35px;
  margin-left: -35px;
}

/* =========================================
                Home
============================================ */

#home {
  /* without the background: none; the background will be general white, which set by section background */
  background: none;

  /*make sure the home section goes the entire browser window  */
  height: 100%;
}

#home-bg-video {
  position: fixed;
  top: 50%;
  left: 50%;
  /* translateX: move the video 50% to he left from its current position 
  by these three
  top: 50%;
  left: 50%;
  -webkit-transform: translateX(-50%) translateY(-50%);
  the vedio fixed in the middle of the screen
  
  -webkit-transform： by the plug-in of bracket: auto prefixer
  this prefix, webkit, make sure this translateX will work perfactly on all their kit based on browsers*/
  -webkit-transform: translateX(-50%) translateY(-50%);
  transform: translateX(-50%) translateY(-50%);

  /* min-width: 100%;  make sure the video goes to the full screen*/
  min-width: 100%;
  min-height: 100%;

  /* make sure the things look good all the time */
  width: auto;
  height: auto;
  z-index: -1;

  /* there two lines means when the video is not working well, there will be a img instead, and the image is cover the window size */
  background: url("../video/solo.jpg") no-repeat;
  background-size: cover;
}

#home-overlay {
  background-color: rgba(0, 0, 0, 0.8);
  width: 100%;
  height: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: -1;
}

#home-content {
  width: 100%;
  height: 100%;

  /* vertical centering with css */
  display: table;
}

#home-content-inner {
  display: table-cell;
  vertical-align: middle;
}

#home-heading h1 {
  color: #fff;
  font-size: 65px;
  font-weight: 100;
  text-transform: uppercase;
  margin: 0;
  display: inline-block;
}

#home-heading h1 span {
  color: #f4c613;
  font-weight: 500;
}

#home-text p {
  color: #fff;
  font-size: 17px;
  font-weight: 100;
  margin: 8px 0 30px 0;
}

/* =========================================
                Buttons
============================================ */

.btn-general {
  font-family: "Raleway", sans-serif;
  border-radius: 28px;
  font-size: 13px;
  text-transform: uppercase;
  margin: 0 6px;
  padding: 12px 46px 12px 46px;

  /* cover all the transitions, 0.5s means the duration of the transition */
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
}

.btn-home {
  color: #fff;
  border: 1px solid #fff;
}

.btn-home:hover,
.btn-home:focus {
  color: #fff;
  background-color: #f4c613;
  border: 1px solid #f4c613;
}

.btn-yellow {
  color: #fff;
  border: 1px solid #f4c613;
  background-color: #f4c613;
}

.btn-yellow:hover,
.btn-yellow:focus {
  color: #fff;
  background-color: #212226;
  border: 1px solid #212226;
}

.btn-white {
  color: #212226;
  border: 1px solid #fff;
  background-color: #fff;
}

.btn-white:hover,
.btn-white:focus {
  color: #fff;
  background-color: #212226;
  border: 1px solid #212226;
}

.btn-back-to-top {
  position: fixed;
  bottom: 20px;
  right: 20px;
  padding: 3px 15px;
  border-radius: 4px;
  font-size: 22px;
  display: none;
}

/* =========================================
                Arrow Down
============================================ */

#arrow-down {
  position: absolute;
  left: 50%;
  bottom: 20px;
  color: #fff;
  font-size: 32px;
  width: 32px;
  height: 32px;
  /* text-align: center; make sure the arrow in the middle of the box */
  text-align: center;
  /* make the box in the totally middle of the parent box */
  margin-left: -16px;
  z-index: 1;
}

#arrow-down:hover,
#arrow-down:focus {
  color: #f4c613;
}

/* =========================================
                Content Boxes
============================================ */

.content-box-lg {
  padding: 120px 0;
}

.content-box-md {
  padding: 100px 0;
}

.content-box-sm {
  padding: 90px 0;
}

/* =========================================
        Vertical/Horizontal Headings
============================================ */

.vertical-heading h5 {
  color: #f4c613;
  font-size: 14px;
  font-weight: 500;
  text-transform: uppercase;
  word-spacing: 9px;
  display: inline-block;
  -webkit-transform: rotate(-90deg);
  transform: rotate(-90deg);
  /* relative to the original position */
  position: relative;
  top: 60px;
  left: -53px;
}

.vertical-heading h2 {
  margin: 0 0 0 35px;
}

.horizontal-heading h2,
.vertical-heading h2 {
  font-size: 42px;
  font-weight: 100;
  line-height: 45px;
}

.horizontal-heading {
  margin-bottom: 80px;
}

.horizontal-heading h5 {
  font-size: 16px;
  color: #f4c613;
  text-transform: uppercase;
  display: inline-block;
  margin-bottom: 10px;
}

.horizontal-heading h2 {
  margin: 0;
}

/* =========================================
                About 01
============================================ */
/* css selector first-child */
#about-right p:first-child {
  margin-bottom: 30px;
}

#about-bottom {
  margin-top: 60px;
}
/* make sure the image is always in the center of the page  */
#about-bottom img {
  margin: 0 auto;
}

/* =========================================
                About 02
============================================ */

#about-02 {
  background-color: #f4f4f4;
}

.about-item {
  background-color: #fff;
  padding: 80px 30px;
  /* horizontal shadow, vertical shadow, blur value/distance, shadow color*/
  /* -webkit-box-shadow: 0 0 10px rgba(0, 0, 0, 0.9); */
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.9);
}

.about-item i {
  font-size: 42px;
  margin: 0;
}

.about-item h3 {
  font-size: 24px;
  margin-bottom: 10px;
}

.about-item hr {
  width: 45px;
  height: 3px;
  background-color: #f4c613;
  margin: 0 auto;
  border: none;
}

.about-item p {
  margin-top: 20px;
}

/* Hover state */

.about-item:hover {
  background-color: #f4c613;
}

.about-item:hover i,
.about-item:hover h3,
.about-item:hover p {
  color: #fff;
}

.about-item:hover hr {
  background-color: #fff;
}

.about-item:hover i {
  transform: translateY(-20px);
}

/* Smooth transition */

.about-item,
.about-item i,
.about-item hr {
  -webkit-transition: all 400ms ease-in-out;
  transition: all 400ms ease-in-out;
}
.about-item h3,
.about-item p {
  -webkit-transition: all 400ms linear;
  transition: all 400ms linear;
}

/* =========================================
                Team
============================================ */

#team-left .vertical-heading {
  min-height: 160px;
}

.team-member {
  margin: 8px;
  /* for team-member-overlay 可以正好覆盖在team member的图片上 */
  position: relative;
}

.team-member-overlay {
  background-color: rgba(33, 34, 38, 0.9);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  opacity: 0;
  -webkit-transition: all 300ms linear;
  transition: all 300ms linear;
}

.team-member-info {
  width: 100%;
  height: 100%;
  padding: 80px 0;
}

.team-member-info h6 {
  color: #f4c613;
  font-size: 16px;
  margin: 0;
}

.team-member-info p {
  color: #fff;
}

.team-member:hover .team-member-overlay {
  opacity: 1;
}

/* =========================================
                Social Icons
============================================ */

ul.social-list {
  padding: 0;
  margin-top: 20px;
}

ul.social-list li {
  /* 原本竖排的social icons list item变成横排的了 */
  display: inline-block;
  padding: 0;
}

ul.social-list li a {
  border: 1px solid #fff;
  width: 35px;
  height: 35px;
  /* without this property, the width and height can not work very well */
  display: inline-block;
  /* 行高 make the icon in the middle of the box */
  line-height: 35px;
  color: #fff;
  border-radius: 50%;
  -webkit-transition: all 400ms linear;
  transition: all 400ms linear;
}

ul.social-list li:nth-child(1) a:hover {
  background: #3b5998;
  border-color: transparent;
}

ul.social-list li:nth-child(2) a:hover {
  background: #00aced;
  border-color: transparent;
}

ul.social-list li:nth-child(3) a:hover {
  background: #dd4b39;
  border-color: transparent;
}

/* =========================================
                Slider Buttons
============================================ */
/* select all the elemet begin with owl-  嵌套inside owl-nav 二层嵌套于 owl-theme
以下原本是写在owl.theme.css里面的*/
.owl-theme .owl-nav [class*="owl-"] {
  color: #212226;
  font-size: 40px;
  background: none;
  margin: 0;
}

.owl-theme .owl-nav [class*="owl-"]:hover {
  background: none;
  color: #212226;
}

/* =========================================
                Skills
============================================ */

.skill {
  margin-bottom: 20px;
}

.skill h4 {
  line-height: 62px;
  margin: 0;
  font-weight: normal;
}

.progress {
  height: 25px;
  border-radius: 0;
  background: #efefef;
  overflow: visible;
}

.progress-bar {
  background: #f4c613;
  position: relative;
}

.progress-bar span {
  font-size: 11px;
  font-weight: 100;
  font-family: "Open Sans", sans-serif;
  background: #212226;
  padding: 3px;
  position: absolute;
  /* 如果他的上一级 progress-bar 不是relative的
  span会继续向上，直到找到class="col-md-6 col-sm-6"
  这个div由bootstrap定义属性，position：relative*/
  left: 97%;
  top: -47px;
}

/* ：before 在span这个element之前加点元素 */
.progress-bar span:before {
  content: "";
  border-top: 8px solid #212226;
  /* transparent 形成一个向下的小三角 */
  border-left: 6px solid transparent;
  border-right: 6px solid transparent;
  position: absolute;
  bottom: -8px;
  left: 23%;
}

/* =========================================
                Statement
============================================ */

#statement {
  background: url("../img/tech/tech-statement.jpg") no-repeat fixed center;
  background-size: cover;
}

#statement .content-box-lg {
  background: rgba(0, 0, 0, 0.3);
}

#tech-statement h3 {
  color: #fff;
  font-size: 28px;
  line-height: 45px;
}

#tech-statement p {
  font-size: 14px;
  color: #f4c613;
  font-family: "Raleway", sans-serif;
  margin-top: 8px;
}

/* =========================================
                Services 01
============================================ */

#services-01 img {
  margin: 60px 0;
}

.service {
  margin: 35px 0;
}

.service .icon {
  font-size: 42px;
  margin: 0;
  /* 将鼠标悬停在一个 div 元素上，这个div对于all hover中的property作出响应效果 */
  -webkit-transition: all 400ms linear;
  transition: all 400ms linear;
}

.service:hover .icon {
  color: #f4c613;
  -webkit-transform: translateX(-20px);
  transform: translateX(-20px);
}

.service h5 {
  font-size: 12px;
  text-transform: uppercase;
  color: #f4c613;
  margin: 0 0 6px 0;
}

.service:hover h5 {
  color: #212226;
}

.service h4 {
  font-size: 24px;
  margin: 0 0 8px 0;
}

.service p {
  line-height: normal;
}

/* =========================================
    Services 02 (Responsive Tabs)
============================================ */

#services-02 {
  background: #f4f4f4;
}

#services-tabs ul {
  margin-bottom: 40px;
}

#services-tabs ul li {
  padding: 5px 30px;
}

#services-tabs ul li a {
  font-family: "Raleway", sans-serif;
  font-size: 13px;
  color: #212226;
  text-transform: uppercase;
  font-weight: 400;
  padding: 0;
  text-decoration: none;
}

/* Tab active state */
/* jquery reponsive tab plugin active tab */
#services-tabs ul li.r-tabs-state-active a {
  color: #f4c613;
  font-weight: 700;
  border-bottom: 3px solid #f4c613;
  padding-bottom: 5px;
  /* 将鼠标悬停在一个 div 元素上,变化特点， */
  -webkit-transition: border-color 300ms linear;
  transition: border-color 300ms linear;
}

.service-tab .col-md-6 {
  padding: 0;
}

.service-tab img {
  width: 100%;
  margin: 0 auto;
}

.service-tab .tab-bg {
  background: #fff;
  padding: 59px 30px;
  min-height: 481px;
}

.service-tab h2 {
  font-size: 48px;
  color: #bbb;
  margin-bottom: 20px;
  font-weight: 100;
}

.service-tab h3 {
  font-size: 32px;
  margin-bottom: 30px;
}

.service-tab p {
  line-height: 24px;
  margin-bottom: 30px;
}

/* =========================================
                Portfolio
============================================ */

#portfolio {
  padding-bottom: 160px;
}

#portfolio .vertical-heading {
  margin-bottom: 50px;
}

/* select ALL(*) the element have a class attribute value contain 'col-' */
.row.no-gutters [class*="col-"] {
  padding: 0;
}

.portfolio-item {
  overflow: hidden;
  /* 为了它的下一级portfolio-item-overlay position: absolute; */
  position: relative;
}

/* Filters CSS */

#isotope-filters {
  margin-bottom: 10px;
  padding: 20px 25px 20px 0;
}

/* 
  会被boostrap覆盖的原因：1.选择器优先级，提高选择器的优先级，或者使用!important 2.css文件的引入顺序，boostrap在自定义style之后
  以下为什么不会被boostrap覆盖：
  以下的选择器中包含了一个 ID 选择器 #isotope-filters，
  而boostrap中只包含了类选择器和伪类选择器.btn.active.focus，没有 ID 选择器。


  根据您提供的 CSS 代码片段，.btn.active.focus, .btn.active:focus, .btn.focus, .btn:active.focus, .btn:active:focus, .btn:focus 这部分是 Bootstrap 自带的样式规则，而 #isotope-filters button 是您自己写的选择器。
  在 CSS 中，选择器的特定性（specificity）和规则的顺序会影响样式的应用。特定性是一种用于确定哪个规则具有更高优先级的方式。选择器的特定性通常由选择器中的元素、类、ID 和伪类等因素决定。
  在您的情况下，虽然 .btn.active.focus, .btn.active:focus, .btn.focus, .btn:active.focus, .btn:active:focus, .btn:focus 包含了多个状态伪类，但它们仍然处于类选择器 .btn 下，而 #isotope-filters button 包含了一个 ID 选择器 #isotope-filters 和元素选择器 button。ID 选择器具有较高的特定性，因此具有更高的优先级。
  因此，即使按钮处于 .btn.active 或 .btn:focus 状态，#isotope-filters button 中定义的 outline: 0; 会覆盖 Bootstrap 中定义的 outline: 5px auto -webkit-focus-ring-color;。这是因为 #isotope-filters button 具有更高的特定性和更具体的选择器，所以它的样式规则会覆盖较低特定性的规则。


    1. 元素选择器
    2. 类选择器、属性选择器和伪类
      属性选择器：
      input[type="text"] {
        border: 1px solid #ccc;
      }
    3. ID 选择器
    4. 内联样式: 直接在元素上的 style 属性中定义的样式
*/
#isotope-filters button {
  font-family: "Raleway", sans-serif;
  font-size: 12px;
  font-weight: 700;
  text-transform: uppercase;
  background: transparent;
  -webkit-box-shadow: none;
  box-shadow: none;
  padding-right: 35px;
  outline: 0;
}

/* 
    .btn.active.focus：带有类名 btn、同时具有 active 类名和 focus 类名的按钮元素。

    .btn.active:focus：带有类名 btn、同时具有 active 类名和获取焦点（focus）状态的按钮元素。

    .btn:active.focus：带有类名 btn 且同时处于激活状态（active）和获取焦点（focus）状态的按钮元素。
    
    .btn:active:focus：带有类名 btn 且同时处于激活状态（active）和获取焦点（focus）状态的按钮元素。
    
    以下两者几乎一样，因为用户点击button，button就会添加.focus类，所以焦点状态和焦点类，几乎一样
    .btn.focus：带有类名 btn 且处于获取焦点（focus）状态的按钮元素。
                带有类名 .btn 的元素，在这些元素上设置获取焦点（focus）时的样式。
    .btn:focus：带有类名 btn 且处于获取焦点（focus）状态的按钮元素。
*/

#isotope-filters button span {
  display: block;
  padding-bottom: 5px;
  /* transition 属性是用于创建 CSS 过渡效果的属性。它允许您在元素的状态发生变化时，平滑地过渡或动画化属性值的变化，而不是突然改变
      当元素的边框颜色（border-color）发生变化时，将应用过渡效果
      border-color：这是要过渡的 CSS 属性，也就是当发生变化时要产生动画效果的属性。在这里，它指的是元素的边框颜色。
      0.4s：这是过渡的持续时间，以秒为单位。在这里，过渡效果将在 0.4 秒内完成，这意味着边框颜色的变化将在 0.4 秒内平滑地进行。
      ease-in-out：这是过渡的速度曲线或缓动函数。ease-in-out 缓动函数会使过渡在开始时缓慢启动，然后在结束时再次缓慢结束，以确保平滑的过渡效果。
  */
  -webkit-transition: border-color 0.4s ease-in-out;
  transition: border-color 0.4s ease-in-out;
}

/* 选择网页中带有 isotope-filters 类名的按钮，并且只选择那些带有 active 类名的按钮内部的 <span> 元素 */
#isotope-filters button.active span {
  color: #f4c613;
  border-bottom: 3px solid #f4c613;
}

/* Zoom Effect */

.portfolio-item img {
  /* 
    width: 100%;：这一行代码将元素的宽度设置为其容器的宽度的百分之百。这意味着元素的宽度会自动扩展以填满其容器的宽度，从而实现水平自适应。无论容器有多宽，该元素 都会充满整个容器的宽度。

    height: auto;：这一行代码将元素的高度设置为自动。这意味着元素的高度将根据其内容的实际高度而自动调整，以保持内容的原始纵横比。这确保了元素不会被拉伸或变形，而是根据内容的高度自动调整。
  */
  width: 100%;
  height: auto;
  /* 
    当元素的 transform 属性发生变化时，例如平移、旋转、缩放等，将会以 0.5 秒的持续时间以平滑的方式过渡到新的属性值，使用了缓动函数 ease 来使过渡效果看起来更加自然和平滑。这通常用于创建动画效果，以增强用户界面的交互性。
  */
  -webkit-transition: -webkit-transform 0.5s ease;
  transition: -webkit-transform 0.5s ease;
  transition: transform 0.5s ease;
  transition: transform 0.5s ease, -webkit-transform 0.5s ease;
}

.portfolio-item:hover img {
  /*  transform 是一个用于改变元素在 2D 或 3D 空间中的位置、大小、旋转或者斜切等变换的属性。它可以用来实现元素的动画、交互效果和布局调整
      平移 transform: translateX(50px) translateY(20px);
      缩放 transform: scale(1.2); 将元素放大 20%
      旋转 transform: skewX(30deg); 在水平方向上斜切元素
      复合变换 transform: translateX(50px) rotate(45deg) scale(1.2);
      3D 变换 transform: translate3d(50px, 20px, 30px);  在三个维度上进行平移
  */
  -webkit-transform: scale(1.1);
  transform: scale(1.1);
}

/* Overlay Effect */

.portfolio-item-overlay {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(14, 14, 17, 0.9);
  cursor: -webkit-zoom-in;
  /* cursor: zoom-in; */
  cursor: pointer;
  /* 
    以下三项是为了：
    正常情况不显示overlay（opacity: 0）
    hover 到 .portfolio-item:hover 显示 overlay
    最后两行：显示的时候，缓慢划入
  */
  opacity: 0;
  -webkit-transition: all 0.5s ease;
  transition: all 0.5s ease;
}

/* Item Details Effect */

.portfolio-item-details {
  width: 100%;
  position: absolute;
  top: 50%;
  left: 0;
  /* 
    transform 是 CSS3 中用于对元素进行各种变换操作的属性。
    translateY 是其中的一个变换函数，用于垂直方向的平移。
    -50% 表示向上平移元素的位置，距离为元素自身高度的 50%。
  */
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
}

.portfolio-item-details h3 {
  color: #f4c613;
  text-transform: uppercase;
  font-size: 30px;
  margin: 0;
  padding: 0;
  -webkit-transform: translateY(-20%);
  transform: translateY(-20%);
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
}

.portfolio-item-details span {
  /* 
    inline-block 允许元素在同一行内显示，但又具有块级元素的特性，例如可以设置宽度、高度、内边距（padding）、外边距（margin）等。
    inline-block 元素会在水平方向上排列，如果空间不足，它们会自动换行到下一行。
    这种显示方式常用于创建一组水平排列的元素，比如导航菜单项、按钮等。
  */
  display: inline-block;
  border-top: 1px solid #fff;
  border-bottom: 1px solid #fff;
  height: 6px;
  width: 30px;
  /* 
    11px：这是上边距的值，表示元素顶部与相邻元素或包含元素的顶部之间的距离为11像素。
    auto：这是右边距的值，其中的 auto 表示浏览器会自动计算和分配右边距的值，以使元素水平居中对齐。
    5px：这是下边距的值，表示元素底部与相邻元素或包含元素的底部之间的距离为5像素。
    auto：这是左边距的值，同样表示浏览器会自动计算和分配左边距的值，以使元素水平居中对齐。
    这个样式规则通常用于水平居中一个元素，因为它将左右外边距设置为 auto，这会使元素水平居中对齐，而上下外边距则可以自定义。这在响应式设计中很有用，因为它可以在不同屏幕尺寸下保持元素的水平居中对齐，并调整上下边距以适应不同的布局需求。 
  */
  margin: 11px auto 5px auto;
}

.portfolio-item-details p {
  font-size: 17px;
  color: #fff;
  text-transform: uppercase;
  margin: 0;
  padding: 0;
  -webkit-transform: translateY(20%);
  transform: translateY(20%);
  -webkit-transition: all 0.5s;
  transition: all 0.5s;
}

/* Show Overlay on mouse over */

.portfolio-item:hover .portfolio-item-details h3 {
  -webkit-transform: translateY(0);
  transform: translateY(0);
}

.portfolio-item:hover .portfolio-item-details p {
  -webkit-transform: translateY(0);
  transform: translateY(0);
}

.portfolio-item:hover .portfolio-item-overlay {
  opacity: 1;
}

/* =========================================
                Testimonials
============================================ */

#testimonials {
  background: #f4f4f4;
  padding-bottom: 45px;
  overflow: visible;
}

#testimonials .vertical-heading {
  padding: 80px 0;
  /* 添加这句话，因为一旦屏幕变窄，boostrap的col们会竖排排列，vertical-heading需要与下面的元素之间有间隔 */
  margin-bottom: 50px;
}

#testimonial-slider {
  background: #f4c613;
  top: -120px;
}

.testimonial .row {
  margin-bottom: 25px;
}

.testimonial {
  padding: 20px 45px 0 45px;
  color: #fff;
}

.testimonial h3 {
  font-size: 32px;
  line-height: 35px;
}

.testimonial .stars {
  font-size: 20px;
  margin: 20px 0 10px 0;
}

.testimonial p {
  line-height: normal;
  margin: 0;
  margin-top: 5px;
  margin-bottom: 20px;
}

.author .author-name-des {
  width: 106px;
  margin-top: 25px;
  text-align: left;
}

.author .author-name-des p {
  margin: 0;
}

/* =========================================
                Pricing
============================================ */

.pricing-table {
  /* 
    box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);
    0 0     横向/纵向, 偏移量都为 0
    10 px   模糊值
    0       spread how much does shadow must spread
    rgba    color for this shadow

    h-offset：水平偏移量，表示阴影相对于元素的水平位置。正值表示向右偏移，负值表示向左偏移。
    v-offset：垂直偏移量，表示阴影相对于元素的垂直位置。正值表示向下偏移，负值表示向上偏移。
    blur：模糊半径，表示阴影的模糊程度。值越大，阴影越模糊，值为 0 表示没有模糊。
    spread：阴影的扩展半径，表示阴影的尺寸扩展或缩小。正值表示扩大，负值表示缩小。
    color：阴影的颜色，可以是颜色名称、十六进制值、RGB 值或 RGBA 值。
  */
  -webkit-box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);
  box-shadow: 0 0 10px 20px rgba(0, 0, 0, 0.1);
  border-radius: 6px;
  padding: 32px 21px;
  -webkit-transition: all 400ms linear;
  transition: all 400ms linear;
}

.pricing-table:hover {
  background: #f4c613;
}

.pricing-table .type h4 {
  color: #f4c613;
  font-size: 24px;
  margin-bottom: 25px;
}

.pricing-table .price {
  border-top: 1px solid #e0e0e0;
  border-bottom: 1px solid #e0e0e0;
  padding: 24px 0;
}

.pricing-table .price h2 {
  font-family: "Open Sans", sans-serif;
  /* font-size 和 font-weight 是用来控制文本样式的两个不同的属性，它们分别控制字体的大小和字体的粗细。 */
  font-size: 42px;
  font-weight: 100;
  margin: 0 0 0 24px;
  position: relative;
}

.pricing-table .price h2 span {
  font-family: "Raleway", sans-serif;
}

.pricing-table .price h2 span.dollar {
  font-size: 18px;
  font-weight: 300;
  position: absolute;
  left: -20px;
  top: 5px;
}

.pricing-table .price h2 span.month {
  font-size: 11px;
  font-weight: 400;
  position: absolute;
  left: 5px;
  bottom: -12px;
}

.pricing-table .price p {
  line-height: normal;
  font-weight: 200;
  margin: 0;
  padding: 0;
}

.pricing-table ul.package {
  list-style: none;
  padding: 20px 0;
}

.pricing-table ul.package li {
  font-family: "Open Sans", sans-serif;
  font-size: 13px;
  font-weight: 400;
  line-height: 40px;
}

/* 
    width: 24px;：这个规则将元素的宽度设置为固定的24像素。元素的宽度将始终保持为24像素，不会随内容或父级容器的大小而变化。
    width: 96%;：这个规则将元素的宽度设置为父级容器宽度的96%。元素的宽度会根据其父级容器的大小而自动调整，以占据父级容器的96%宽度。这在实现响应式设计时非常有用，可以使元素根据屏幕或容器的大小自动调整。
    width: auto;：这个规则告诉浏览器根据元素的内容和父级容器的宽度来确定元素的宽度。它通常用于文本元素或块级元素，以确保内容不被截断或溢出。元素的宽度会自动调整以适应其内容和父级容器。

    使用width: 24px;当你需要一个具有固定宽度的元素，不希望它根据内容或父级容器的大小而变化。
    使用width: 96%;当你希望元素的宽度相对于其父级容器的宽度自动调整，以适应不同屏幕大小或容器宽度的情况。
    使用width: auto;通常用于文本元素或块级元素，以确保内容不被截断，并且元素的宽度会根据内容和父级容器自动调整。
*/
.pricing-table ul.package li i {
  width: 24px;
}

.pricing-table .btn-yellow,
.pricing-table.black .btn-white {
  width: 96%;
}

.pricing-table:hover h4,
.pricing-table:hover h2,
.pricing-table:hover p,
.pricing-table:hover ul.package {
  color: #fff;
}

.pricing-table:hover .btn-yellow {
  background: #fff;
  color: #212226;
  border: 1px solid #fff;
}

.pricing-table .btn-yellow:hover,
.pricing-table .btn-yellow:focus {
  background: #212226;
  color: #fff;
  border: 1px solid #212226;
}

/* Black Pricing Table */

.pricing-table.black {
  background: #212226;
  color: #fff;
}

.pricing-table.black .type h4 {
  color: #fff;
}

.pricing-table.black:hover {
  background: #f4c613;
}

/* =========================================
                Stats
============================================ */

#stats {
  background: url("../img/stats/stats-bg.jpg") no-repeat fixed center;
  background-size: cover;
}

#stats .content-box-md {
  background: rgba(0, 0, 0, 0.8);
}

#stats .vertical-heading {
  margin-bottom: 50px;
}

#stats .vertical-heading h2 {
  color: #fff;
}

.stats-item {
  background: rgba(61, 68, 68, 0.6);
  border-radius: 4px;
  min-height: 170px;
  padding: 25px 50px;
  -webkit-transition: all 400ms linear;
  transition: all 400ms linear;
}

.stats-item i {
  font-size: 42px;
  color: #f4c613;
  margin: 0 0 6px 0;
  -webkit-transition: all 400ms linear;
  transition: all 400ms linear;
}

.stats-item h3 {
  font-size: 32px;
  color: #fff;
  margin: 5px 0 5px 0;
}

.stats-item p {
  color: #fff;
  margin: 0;
}

.stats-item:hover {
  background: #f4c613;
}

.stats-item:hover i {
  color: #212226;
  -webkit-transform: translateY(-20px);
  transform: translateY(-20px);
}

/* =========================================
                Clients
============================================ */

#clients .horizontal-heading {
  margin-bottom: 30px;
}

#clients-list {
  padding: 45px 0 0 0;
}

.client {
  padding: 0 10px;
  max-width: 150px;
  margin: 0 auto;
  line-height: 100px;
}

.client img {
  /* 
    这些client的标志，不是上下对齐的，inline-block（元素会在一行中显示，但是又具有block属性，可以设置长宽高） 可以保证他们在一条水平线上
    .owl-carousel .owl-item img { display: block; }
    他们的权重一样（都是类 + 元素），
    而且owl比style.css的优先级更高（在chrome中可以看到这一点，可能是因为 script.js 中的方法应用，我没有查到owl-item类名的使用，但是它被加载了，说明script.js中.owlCarousel() 方法，会加载一些类名给被选择的元素。可能因此提高了.owl-carousel .owl-item 的优先级），
    所以需要!important
  */
  display: inline-block !important;
}

/* =========================================
                Blog
============================================ */

#blog {
  background: #f4f4f4;
}

#blog-left p {
  margin: 25px 0;
}

#blog-btn a {
  margin: 0;
}

.blog-post {
  background: #fff;
  padding: 20px;
  -webkit-box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);
  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);
  border-radius: 4px;
}

.blog-post h4 {
  line-height: 40px;
  margin: 0;
}

.blog-post > p {
  line-height: 24px;
  margin: 0;
  font-weight: 300;
}

.blog-post a {
  display: inline-block;
  margin-top: 25px;
  text-transform: uppercase;
  font-family: "Raleway", sans-serif;
  color: #f4c613;
  font-size: 12px;
  font-weight: 500;
  text-decoration: none;
  -webkit-transition: all 400ms linear;
  transition: all 400ms linear;
}

.blog-post a:hover {
  color: #212226;
}

.blog-post .post-meta {
  border-top: 1px solid #e0e0e0;
  margin-top: 30px;
  padding-top: 10px;
}

.blog-post .post-meta p {
  font-size: 11px;
  font-family: "Raleway", sans-serif;
  line-height: 24px;
  font-weight: 500;
  margin: 0;
}

/* =========================================
                Contact
============================================ */

/* Contact Left */

#contact-left p {
  margin: 25px 0 20px 0;
}

ul.office-details {
  list-style: none;
  padding: 0;
}

ul.office-details li {
  font-family: "Open Sans", sans-serif;
  margin-top: 12px;
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

ul.office-details li i {
  font-size: 20px;
  width: 45px;
}

#contact-left ul.social-list li a {
  color: #212226;
  border: 1px solid #212226;
  text-align: center;
}

#contact-left ul.social-list li a:hover {
  color: #fff;
  border-color: transparent;
}

/* Contact Right */

#contact-right {
  padding: 25px 30px;
  -webkit-box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);
  box-shadow: 0 0 10px 0 rgba(0, 0, 0, 0.1);
  border-radius: 4px;
}

#contact-right h4 {
  font-size: 24px;
}

#contact-right p {
  margin-bottom: 25px;
}

#contact-right form .form-control {
  font-family: "Open Sans", sans-serif;
  padding: 10px 15px;
  font-size: 12px;
  line-height: 24px;
}

#contact-right form textarea.form-control {
  min-height: 164px;
}

/* =========================================
                Google Map
============================================ */

#map {
  height: 600px;
}

/* =========================================
                Footer
============================================ */

footer {
  background: #212226;
  padding: 30px;
}

footer p {
  color: #fff;
  line-height: 20px;
  margin: 0;
}

footer p span {
  color: #f4c613;
}

/* =========================================
                Navigation
============================================ */

.navbar {
  padding: 35px 0 20px 0;
  -webkit-transition: all 300ms linear;
  transition: all 300ms linear;
}

.site-nav-wrapper {
  padding: 0 85px;
}

.navbar-brand {
  padding: 13px 15px;
}

/*     
    ul.navbar-nav: 这部分选择器选择了具有 class 属性为 navbar-nav 的 <ul> 元素。这意味着它选择了具有这个类的导航列表。
    >：这是子选择器（child selector），它用于选择作为前一部分选择器（ul.navbar-nav）的直接子元素。在这种情况下，它选择了直接是 <ul> 元素的子元素的 <li> 元素。
    li：这部分选择器选择了 <li> 元素，这通常是用于创建列表项的 HTML 元素。
    >：再次使用子选择器，这次选择了作为前一部分选择器（li）的直接子元素的 <a> 元素。
    a：最后一个部分选择了 <a> 元素，这通常用于创建超链接。
*/
ul.navbar-nav > li > a {
  font-family: "Raleway", sans-serif;
  color: #fff;
  font-size: 13px;
  font-weight: 400;
  text-transform: uppercase;
  letter-spacing: 1px;
}

/* 
  这里为什么 background: none;
  因为boostrap中包含
  .nav>li>a:focus, .nav>li>a:hover {
    text-decoration: none;
    background-color: #eee;
  }
  如果不写 background: none; focus/hover 之后，背景会因为boostrap中的background-color: #eee; 变成白色
*/
ul.navbar-nav > li > a:hover,
ul.navbar-nav > li > a:focus {
  background: none;
  color: #f4c613;
}

/* 
  white-nav-top 这个类是通过 script.js 的函数 conditional add 的
*/
/* White Navigation */

.white-nav-top {
  background: #fff;
  padding: 10px 0;
  -webkit-box-shadow: 0 8px 6px -9px #999;
  box-shadow: 0 8px 6px -9px #999;
  z-index: 2;
}

.white-nav-top ul.navbar-nav > li > a {
  color: #212226;
}

.white-nav-top ul.navbar-nav > li > a:hover,
.white-nav-top ul.navbar-nav > li > a:focus {
  color: #f4c613;
}

/* Scroll spy active state */

.white-nav-top ul.navbar-nav > li.active > a {
  color: #f4c613;
  font-weight: 500;
}

/* =========================================
                Animation
============================================ */

/* 每个动画效果，持续多久时间 */
#home-heading-1,
#home-heading-2,
#home-text,
#home-btn,
#arrow-down i {
  -webkit-animation-duration: 1.5s;
  animation-duration: 1.5s;
}

/* 延迟多久展示动画效果 */
#home-heading-1 {
  -webkit-animation-delay: 1s;
  animation-delay: 1s;
}

#home-heading-2 {
  -webkit-animation-delay: 1.5s;
  animation-delay: 1.5s;
}

#home-text {
  -webkit-animation-delay: 2s;
  animation-delay: 2s;
}

#home-btn {
  -webkit-animation-delay: 2.5s;
  animation-delay: 2.5s;
}

#arrow-down i {
  -webkit-animation-delay: 3s;
  animation-delay: 3s;
}
